name: Release (Windows x86/x64)

on:
  push:
    tags:
      - '*'
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  build-windows:
    name: Build ${{ matrix.target }}
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        target: [x86_64-pc-windows-msvc, i686-pc-windows-msvc]

    steps:
      - name: Checkout (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cargo build (release)
        working-directory: gibberlink-tx
        run: cargo build --release --target ${{ matrix.target }}
      - name: Setup Python (x64) for packaging
        if: matrix.target == 'x86_64-pc-windows-msvc'
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          architecture: 'x64'

      - name: Setup Python (x86) for packaging
        if: matrix.target == 'i686-pc-windows-msvc'
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          architecture: 'x86'

      - name: Install PyInstaller
        run: |
          python -m pip install --upgrade pip pyinstaller

      - name: Build single-file UI exe
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          $cli = "gibberlink-tx\target\${{ matrix.target }}\release\gibberlink-tx.exe"
          if (-not (Test-Path $cli)) { throw "Missing CLI at $cli" }
          pyinstaller --noconfirm --onefile --name gibberlink-ui --add-data "$cli;." gibberlink-ui.py
          Copy-Item .\dist\gibberlink-ui.exe "gibberlink-ui-${{ matrix.target }}.exe"


      - name: Stage files for packaging
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          New-Item -Force -ItemType Directory -Path stage\gibberlink-tx\target\release | Out-Null
          Copy-Item "gibberlink-tx\target\${{ matrix.target }}\release\gibberlink-tx.exe" "stage\gibberlink-tx\target\release\gibberlink-tx.exe"
          Copy-Item README.md stage\
          Copy-Item launcher.py stage\
          Copy-Item gibberlink-ui.py stage\

      - name: Create zip
        shell: pwsh
        run: |
          $zip = "gibberlink-windows-${{ matrix.target }}.zip"
          if (Test-Path $zip) { Remove-Item $zip }
          Compress-Archive -Path "stage/*" -DestinationPath $zip

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: gibberlink-${{ matrix.target }}
          path: gibberlink-windows-${{ matrix.target }}.zip
      - name: Upload UI exe artifact
        uses: actions/upload-artifact@v4
        with:
          name: gibberlink-ui-${{ matrix.target }}
          path: gibberlink-ui-${{ matrix.target }}.exe


      - name: Create/Update GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          generate_release_notes: true
          files: |
            gibberlink-windows-${{ matrix.target }}.zip
            gibberlink-ui-${{ matrix.target }}.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
